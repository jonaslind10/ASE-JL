\begin{Verbatim}[commandchars=\\\{\}]
\PYG{n}{EX\PYGZus{}INTERRUPT\PYGZus{}HANDLER}\PYG{p}{(}\PYG{n}{Sport0\PYGZus{}RX\PYGZus{}ISR}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
\PYG{k+kt}{int} \PYG{n}{i}\PYG{p}{;}
\PYG{k}{static} \PYG{k+kt}{short} \PYG{n}{j}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}
\PYG{c+c1}{// confirm interrupt handling}
\PYG{o}{*}\PYG{n}{pDMA1\PYGZus{}IRQ\PYGZus{}STATUS} \PYG{o}{=} \PYG{l+m+mh}{0x0001}\PYG{p}{;}
\PYG{c+c1}{// Move data from receive buffer to local buffer}
\PYG{k}{for} \PYG{p}{(}\PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{INPUT\PYGZus{}SIZE}\PYG{p}{;} \PYG{n}{i}\PYG{o}{++}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
	\PYG{c+c1}{// Retrieve all the samples from receive buffer to process buffer}
	\PYG{n}{sCh0LeftIn}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]} \PYG{o}{=} \PYG{n}{sDataBufferRX}\PYG{p}{[}\PYG{n}{INTERNAL\PYGZus{}ADC\PYGZus{}L0}\PYG{o}{+}\PYG{n}{j}\PYG{p}{];}
	\PYG{n}{sCh0RightIn}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]} \PYG{o}{=} \PYG{n}{sDataBufferRX}\PYG{p}{[}\PYG{n}{INTERNAL\PYGZus{}ADC\PYGZus{}R0}\PYG{o}{+}\PYG{n}{j}\PYG{p}{];}
	\PYG{n}{sCh1LeftIn}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]} \PYG{o}{=} \PYG{n}{sDataBufferRX}\PYG{p}{[}\PYG{n}{INTERNAL\PYGZus{}ADC\PYGZus{}L1}\PYG{o}{+}\PYG{n}{j}\PYG{p}{];}
	\PYG{n}{sCh1RightIn}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]} \PYG{o}{=} \PYG{n}{sDataBufferRX}\PYG{p}{[}\PYG{n}{INTERNAL\PYGZus{}ADC\PYGZus{}R1}\PYG{o}{+}\PYG{n}{j}\PYG{p}{];}
	\PYG{c+c1}{// use the builtin circular buffer to update the index}
	\PYG{n}{j} \PYG{o}{=} \PYG{n}{circindex}\PYG{p}{(}\PYG{n}{j}\PYG{p}{,} \PYG{l+m+mi}{4}\PYG{p}{,} \PYG{l+m+mi}{4}\PYG{o}{*}\PYG{n}{INPUT\PYGZus{}SIZE}\PYG{o}{*}\PYG{n}{TOTAL\PYGZus{}FRAME}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}
\PYG{n}{Process\PYGZus{}Data}\PYG{p}{();}
\PYG{p}{...}
\end{Verbatim}
