\begin{Verbatim}[commandchars=\\\{\}]
\PYG{n}{xSemaphoreHandle} \PYG{n}{xSemaphore1} \PYG{o}{=} \PYG{n+nb}{NULL}\PYG{p}{;}

\PYG{k+kt}{void} \PYG{n+nf}{vSwitchTask}\PYG{p}{(} \PYG{k+kt}{void} \PYG{o}{*} \PYG{n}{pvParameters} \PYG{p}{)}
\PYG{p}{\PYGZob{}}
\PYG{n}{xSemaphoreTake}\PYG{p}{(} \PYG{n}{xSemaphore1}\PYG{p}{,} \PYG{n}{portMAX\PYGZus{}DELAY} \PYG{p}{);}
    \PYG{k}{while}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
    \PYG{c+cm}{/* We now have the semaphore and can wait for SW0 to}
\PYG{c+cm}{    give the semaphore. */}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{switchOn}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{))}
        \PYG{n}{xSemaphoreGive}\PYG{p}{(}\PYG{n}{xSemaphore1}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n+nf}{vLEDFlashTask3}\PYG{p}{(} \PYG{k+kt}{void} \PYG{o}{*} \PYG{n}{pvParameters} \PYG{p}{)}
\PYG{p}{\PYGZob{}}
    \PYG{c+cm}{/* If the semaphore is not available wait to see if it}
\PYG{c+cm}{    becomes free. */}
    \PYG{k}{if}\PYG{p}{(} \PYG{n}{xSemaphoreTake}\PYG{p}{(} \PYG{n}{xSemaphore1}\PYG{p}{,} \PYG{n}{portMAX\PYGZus{}DELAY} \PYG{p}{))}
    \PYG{p}{\PYGZob{}}
        \PYG{c+cm}{/* We were able to obtain the semaphore. */}
        \PYG{n}{turnOnLED}\PYG{p}{(}\PYG{l+m+mi}{7}\PYG{p}{);}
        \PYG{n}{vTaskDelay}\PYG{p}{(}\PYG{l+m+mi}{500}\PYG{p}{);}
        \PYG{n}{turnOffLED}\PYG{p}{(}\PYG{l+m+mi}{7}\PYG{p}{);}

        \PYG{c+cm}{/* Release the semaphore. */}
        \PYG{n}{xSemaphoreGive}\PYG{p}{(} \PYG{n}{xSemaphore1} \PYG{p}{);}
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{int} \PYG{n+nf}{main}\PYG{p}{(}\PYG{k+kt}{void}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
    \PYG{n}{initLEDport}\PYG{p}{();}
    \PYG{n}{initSwitchPort}\PYG{p}{();}

    \PYG{c+cm}{/* Create the semaphore to guard a shared resource. */}
    \PYG{n}{vSemaphoreCreateBinary}\PYG{p}{(}\PYG{n}{xSemaphore1}\PYG{p}{);}

    \PYG{n}{xTaskCreate}\PYG{p}{(} \PYG{n}{vSwitchTask}\PYG{p}{,}    \PYG{p}{(} \PYG{k+kt}{signed} \PYG{k+kt}{char} \PYG{o}{*} \PYG{p}{)} \PYG{l+s}{\PYGZdq{}SW0\PYGZdq{}}\PYG{p}{,} \PYG{p}{...}
    \PYG{n}{configMINIMAL\PYGZus{}STACK\PYGZus{}SIZE}\PYG{p}{,} \PYG{n+nb}{NULL}\PYG{p}{,} \PYG{n}{tskIDLE\PYGZus{}PRIORITY}\PYG{p}{,} \PYG{n+nb}{NULL} \PYG{p}{);}
    \PYG{n}{xTaskCreate}\PYG{p}{(} \PYG{n}{vLEDFlashTask3}\PYG{p}{,} \PYG{p}{(} \PYG{k+kt}{signed} \PYG{k+kt}{char} \PYG{o}{*} \PYG{p}{)} \PYG{l+s}{\PYGZdq{}LED7\PYGZdq{}}\PYG{p}{,} \PYG{p}{...}
    \PYG{n}{configMINIMAL\PYGZus{}STACK\PYGZus{}SIZE}\PYG{p}{,} \PYG{n+nb}{NULL}\PYG{p}{,} \PYG{n}{tskIDLE\PYGZus{}PRIORITY}\PYG{p}{,} \PYG{n+nb}{NULL} \PYG{p}{);}
    \PYG{n}{vTaskStartScheduler}\PYG{p}{();}
    \PYG{k}{while}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{)}
    \PYG{p}{\PYGZob{}\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
